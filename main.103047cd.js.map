{"version":3,"sources":["scripts/main.js"],"names":["isSorted","body","document","querySelector","tableHeader","headers","querySelectorAll","bodyTable","personInfo","rows","employeeForm","createElement","classList","add","append","forEach","el","label","innerText","select","name","toLowerCase","dataset","qa","city","option","input","type","button","pushNotification","title","description","message","innerHTML","setTimeout","remove","cellDataReplacement","cell","cellIndex","initialCellValue","value","trim","length","match","isNaN","sum","slice","split","join","toLocaleString","addEventListener","e","preventDefault","data","FormData","get","newRow","key","newCell","reset","header","target","closest","index","sort","personA","personB","a","cells","b","parseFloat","localeCompare","reverse","some","firstChild","focus","eventKey"],"mappings":"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","file":"main.103047cd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHeader = document.querySelector('thead');\nconst headers = document.querySelectorAll('thead th');\nconst bodyTable = document.querySelector('tbody');\nlet personInfo = [...bodyTable.rows];\nlet isSorted;\n\nconst employeeForm = document.createElement('form');\n\nemployeeForm.classList.add('new-employee-form');\nbody.append(employeeForm);\n\n[...headers].forEach(el => {\n  const label = document.createElement('label');\n\n  label.innerText = el.innerText + ':';\n\n  if (el.innerText === 'Office') {\n    const select = document.createElement('select');\n    const office = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    select.name = el.innerText.toLowerCase();\n    select.dataset.qa = el.innerText.toLowerCase();\n\n    office.forEach(city => {\n      const option = document.createElement('option');\n\n      option.innerText = city;\n      select.append(option);\n    });\n\n    label.append(select);\n  } else {\n    const input = document.createElement('input');\n\n    input.name = el.innerText.toLowerCase();\n    input.dataset.qa = el.innerText.toLowerCase();\n\n    switch (el.innerText) {\n      case 'Age':\n      case 'Salary':\n        input.type = 'number';\n        break;\n\n      default:\n        input.type = 'text';\n    }\n\n    label.append(input);\n  }\n\n  employeeForm.append(label);\n});\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.innerText = 'Save to table';\nemployeeForm.append(button);\n\nemployeeForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(employeeForm);\n\n  if (data.get('name').trim().length < 4\n    || data.get('position').trim().length < 4\n    || data.get('name').match(/[0-9]/)\n    || data.get('position').match(/[0-9]/)) {\n    pushNotification(\n      'Wrong data',\n      'The data must have at least 4 letters.',\n      'error');\n\n    return;\n  }\n\n  if (data.get('age') < 18 || data.get('age') > 90) {\n    pushNotification(\n      'Wrong age',\n      'The age must be at least 18 and not more than 90 years.',\n      'error');\n\n    return;\n  }\n\n  if (data.get('salary') <= 0) {\n    pushNotification(\n      'Wrong salary',\n      'Wrong entered salary data.The sum must be greater than 0.',\n      'error');\n\n    return;\n  }\n\n  pushNotification(\n    'Successfully',\n    'A new employee has been added to the table.',\n    'success');\n\n  const newRow = document.createElement('tr');\n\n  for (const [key, value] of data) {\n    const newCell = document.createElement('td');\n\n    if (key === 'salary') {\n      newCell.innerText = `$${(+value).toLocaleString('en-US')}`;\n\n      newRow.append(newCell);\n    } else {\n      newCell.innerText = value;\n      newRow.append(newCell);\n    }\n  }\n\n  bodyTable.append(newRow);\n  personInfo = [...bodyTable.rows];\n  employeeForm.reset();\n});\n\ntableHeader.addEventListener('click', (e) => {\n  const header = e.target.closest('th');\n  const index = header.cellIndex;\n\n  personInfo\n    .sort((personA, personB) => {\n      const a = personA.cells[index].innerText;\n      const b = personB.cells[index].innerText;\n\n      if (a.slice(0, 1) === '$') {\n        return parseFloat(a.slice(1))\n          - parseFloat(b.slice(1));\n      }\n\n      return a.localeCompare(b);\n    });\n\n  if (isSorted !== header) {\n    bodyTable.append(...personInfo);\n    isSorted = header;\n  } else {\n    bodyTable.append(...personInfo.reverse());\n    isSorted = null;\n  }\n});\n\nbodyTable.addEventListener('click', (e) => {\n  personInfo.some(el => el.classList.remove('active'));\n  e.target.closest('tr').classList.add('active');\n});\n\nbodyTable.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n  const cellIndex = cell.cellIndex;\n  const initialCellValue = cell.innerText;\n  let input = document.createElement('input');\n\n  if (cellIndex === 2) {\n    input = document.createElement('select');\n\n    const office = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    office.forEach(city => {\n      const option = document.createElement('option');\n\n      option.innerText = city;\n      input.append(option);\n    });\n  };\n\n  input.classList.add('cell-input');\n\n  input.value = cell.innerText.slice(0, 1) === '$'\n    ? '$'\n    : cell.innerText;\n\n  cell.firstChild.remove();\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    cellDataReplacement(cell, cellIndex, input, initialCellValue);\n  });\n\n  input.addEventListener('keydown', (eventKey) => {\n    if (eventKey.key !== 'Enter') {\n      return;\n    }\n\n    cellDataReplacement(cell, cellIndex, input, initialCellValue);\n  });\n});\n\nfunction pushNotification(title, description, type) {\n  const message = document.createElement('div');\n\n  message.classList.add('notification', type);\n  message.dataset.qa = 'notification';\n\n  message.innerHTML = `\n    <h2 class='title'>\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>\n  `;\n\n  body.append(message);\n  setTimeout(() => message.remove(), 3000);\n};\n\nfunction cellDataReplacement(cell, cellIndex, input, initialCellValue) {\n  cell.innerText = input.value;\n\n  switch (cellIndex) {\n    case 0:\n    case 1:\n      if (input.value.trim().length < 4 || input.value.match(/[0-9]/)) {\n        pushNotification(\n          'ERROR',\n          'Incorrectly entered data.The data must have at least 4 letters.',\n          'error');\n        cell.innerText = initialCellValue;\n      }\n      break;\n\n    case 3:\n      if (isNaN(input.value) || input.value < 18 || input.value > 90) {\n        pushNotification(\n          'ERROR',\n          'Incorrectly entered data.\\n'\n          + 'The age must be at least 18 and not more than 90 years.',\n          'error'\n        );\n        cell.innerText = initialCellValue;\n      }\n      break;\n\n    case 4:\n      const sum = +(input.value.slice(1).split(',').join(''));\n\n      if (isNaN(sum) || sum <= 0) {\n        pushNotification(\n          'ERROR',\n          'Incorrectly entered data.\\n'\n          + 'The sum must be greater than 0.',\n          'error');\n        cell.innerText = initialCellValue;\n      } else {\n        cell.innerText = `$${(sum).toLocaleString('en-US')}`;\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  input.remove();\n};\n"]}